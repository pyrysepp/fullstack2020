{"ast":null,"code":"var _jsxFileName = \"/home/pyry/github/fullstack2020/part5/bloglist-frontend/src/components/Togglable.js\";\nimport React, { useState } from \"react\";\n\nconst Togglable = props => {\n  const [visible, setVisible] = useState(false);\n  const hideWhenVisible = {\n    display: visible ? \"none\" : \"\"\n  };\n  const showWhenVisible = {\n    display: visible ? \"\" : \"none\"\n  };\n\n  const toggleVisibility = () => {\n    setVisible(!visible);\n  };\n\n  if (props.loginStatus) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: hideWhenVisible,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: toggleVisibility,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, props.buttonLabel)), React.createElement(\"div\", {\n      style: showWhenVisible,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, props.children, React.createElement(\"button\", {\n      onClick: toggleVisibility,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, \"cancel\")));\n  } else {\n    return null;\n  }\n};\n\nexport default Togglable;","map":{"version":3,"sources":["/home/pyry/github/fullstack2020/part5/bloglist-frontend/src/components/Togglable.js"],"names":["React","useState","Togglable","props","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","loginStatus","buttonLabel","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAC3B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,KAAD,CAAtC;AAEA,QAAMK,eAAe,GAAG;AAAEC,IAAAA,OAAO,EAAEH,OAAO,GAAG,MAAH,GAAY;AAA9B,GAAxB;AACA,QAAMI,eAAe,GAAG;AAAED,IAAAA,OAAO,EAAEH,OAAO,GAAG,EAAH,GAAQ;AAA1B,GAAxB;;AAEA,QAAMK,gBAAgB,GAAG,MAAM;AAC7BJ,IAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;AACD,GAFD;;AAGA,MAAID,KAAK,CAACO,WAAV,EAAuB;AACrB,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,KAAK,EAAEJ,eAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,OAAO,EAAEG,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoCN,KAAK,CAACQ,WAA1C,CADF,CADF,EAIE;AAAK,MAAA,KAAK,EAAEH,eAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGL,KAAK,CAACS,QADT,EAEE;AAAQ,MAAA,OAAO,EAAEH,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,CAJF,CADF;AAWD,GAZD,MAYO;AACL,WAAO,IAAP;AACD;AACF,CAxBD;;AA0BA,eAAeP,SAAf","sourcesContent":["import React, { useState } from \"react\";\n\nconst Togglable = (props) => {\n  const [visible, setVisible] = useState(false);\n\n  const hideWhenVisible = { display: visible ? \"none\" : \"\" };\n  const showWhenVisible = { display: visible ? \"\" : \"none\" };\n\n  const toggleVisibility = () => {\n    setVisible(!visible);\n  };\n  if (props.loginStatus) {\n    return (\n      <div>\n        <div style={hideWhenVisible}>\n          <button onClick={toggleVisibility}>{props.buttonLabel}</button>\n        </div>\n        <div style={showWhenVisible}>\n          {props.children}\n          <button onClick={toggleVisibility}>cancel</button>\n        </div>\n      </div>\n    );\n  } else {\n    return null;\n  }\n};\n\nexport default Togglable;\n"]},"metadata":{},"sourceType":"module"}