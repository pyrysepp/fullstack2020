{"ast":null,"code":"var _jsxFileName = \"/home/pyry/github/fullstack2020/part5/bloglist-frontend/src/App.js\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport BlogList from \"./components/BlogList\";\nimport blogService from \"./services/blogService\";\nimport LoginForm from \"./components/LoginForm\";\nimport NewBlogForm from \"./components/NewBlogForm\";\nimport StatusMessage from \"./components/StatusMessage\";\nimport Togglable from \"./components/Togglable\";\nimport _ from \"lodash\";\n\nconst App = () => {\n  const [blogs, setBlogs] = useState([]);\n  const [loginStatus, setLoginStatus] = useState(false);\n  const [statusMessage, setStatusMessage] = useState(null);\n\n  const sortBlogs = () => {\n    const allBlogs = _.sortBy(blogs, \"likes\");\n\n    setBlogs(allBlogs);\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const allBlogs = await blogService.getAll();\n      setBlogs(_.sortBy(allBlogs, \"likes\").reverse());\n    };\n\n    fetchData();\n  }, []);\n  const blogFormRef = useRef();\n\n  const removeBlog = async blogId => {\n    try {\n      const response = await blogService.remove(blogId);\n      console.log(response);\n      setBlogs(blogs.filter(b => b.id !== response.data.id));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const createBlog = async blogObject => {\n    try {\n      const response = await blogService.create(blogObject);\n      const newBlog = response.data;\n      console.log(response);\n      setBlogs(blogs.concat(newBlog));\n      setStatusMessage({\n        good: true,\n        message: `${newBlog.title} by ${newBlog.author} added`\n      });\n      blogFormRef.current.toggleVisibility();\n      setTimeout(() => setStatusMessage(null), 3000);\n    } catch (error) {\n      console.log(error.response.data.error);\n      setStatusMessage({\n        good: false,\n        message: error.response.data.error\n      });\n      setTimeout(() => setStatusMessage(null), 5000);\n    }\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(StatusMessage, {\n    statusMessage: statusMessage,\n    setStatusMessage: setStatusMessage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), React.createElement(LoginForm, {\n    loginStatus: loginStatus,\n    setLoginStatus: setLoginStatus,\n    statusMessage: statusMessage,\n    setStatusMessage: setStatusMessage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }), React.createElement(Togglable, {\n    loginStatus: loginStatus,\n    ref: blogFormRef,\n    buttonLabel: \"add new blog\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(NewBlogForm, {\n    loginStatus: loginStatus,\n    statusMessage: statusMessage,\n    setStatusMessage: setStatusMessage,\n    createBlog: createBlog,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  })), React.createElement(BlogList, {\n    loginStatus: loginStatus,\n    blogs: blogs,\n    removeBlog: removeBlog,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/pyry/github/fullstack2020/part5/bloglist-frontend/src/App.js"],"names":["React","useState","useEffect","useRef","BlogList","blogService","LoginForm","NewBlogForm","StatusMessage","Togglable","_","App","blogs","setBlogs","loginStatus","setLoginStatus","statusMessage","setStatusMessage","sortBlogs","allBlogs","sortBy","fetchData","getAll","reverse","blogFormRef","removeBlog","blogId","response","remove","console","log","filter","b","id","data","error","createBlog","blogObject","create","newBlog","concat","good","message","title","author","current","toggleVisibility","setTimeout"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport BlogList from \"./components/BlogList\";\nimport blogService from \"./services/blogService\";\nimport LoginForm from \"./components/LoginForm\";\nimport NewBlogForm from \"./components/NewBlogForm\";\nimport StatusMessage from \"./components/StatusMessage\";\nimport Togglable from \"./components/Togglable\";\nimport _ from \"lodash\";\n\nconst App = () => {\n  const [blogs, setBlogs] = useState([]);\n  const [loginStatus, setLoginStatus] = useState(false);\n  const [statusMessage, setStatusMessage] = useState(null);\n\n  const sortBlogs = () => {\n    const allBlogs = _.sortBy(blogs, \"likes\");\n    setBlogs(allBlogs);\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const allBlogs = await blogService.getAll();\n      setBlogs(_.sortBy(allBlogs, \"likes\").reverse());\n    };\n    fetchData();\n  }, []);\n\n  const blogFormRef = useRef();\n\n  const removeBlog = async (blogId) => {\n    try {\n      const response = await blogService.remove(blogId);\n      console.log(response);\n      setBlogs(blogs.filter((b) => b.id !== response.data.id));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const createBlog = async (blogObject) => {\n    try {\n      const response = await blogService.create(blogObject);\n      const newBlog = response.data;\n      console.log(response);\n      setBlogs(blogs.concat(newBlog));\n\n      setStatusMessage({\n        good: true,\n        message: `${newBlog.title} by ${newBlog.author} added`,\n      });\n      blogFormRef.current.toggleVisibility();\n      setTimeout(() => setStatusMessage(null), 3000);\n    } catch (error) {\n      console.log(error.response.data.error);\n      setStatusMessage({ good: false, message: error.response.data.error });\n      setTimeout(() => setStatusMessage(null), 5000);\n    }\n  };\n\n  return (\n    <div>\n      <StatusMessage\n        statusMessage={statusMessage}\n        setStatusMessage={setStatusMessage}\n      />\n      <LoginForm\n        loginStatus={loginStatus}\n        setLoginStatus={setLoginStatus}\n        statusMessage={statusMessage}\n        setStatusMessage={setStatusMessage}\n      />\n      <Togglable\n        loginStatus={loginStatus}\n        ref={blogFormRef}\n        buttonLabel=\"add new blog\"\n      >\n        <NewBlogForm\n          loginStatus={loginStatus}\n          statusMessage={statusMessage}\n          setStatusMessage={setStatusMessage}\n          createBlog={createBlog}\n        />\n      </Togglable>\n      <BlogList\n        loginStatus={loginStatus}\n        blogs={blogs}\n        removeBlog={removeBlog}\n      />\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}